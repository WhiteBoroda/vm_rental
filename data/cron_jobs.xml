<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data noupdate="1">

    <!-- Существующий cron для проверки истечения срока -->
    <record id="cron_check_vm_expiry" model="ir.cron">
      <field name="name">VM Rental: Check VM Expiry</field>
      <field name="model_id" ref="model_vm_rental_machine"/>
      <field name="state">code</field>
      <field name="code">model._cron_check_expiry()</field>
      <field name="interval_number">1</field>
      <field name="interval_type">days</field>
      <field name="numbercall">-1</field>
      <field name="active" eval="True"/>
    </record>

    <!-- НОВЫЕ CRON ЗАДАЧИ с использованием traits -->

    <!-- Автоматическое создание pending VM -->
    <record id="cron_auto_provision_vms" model="ir.cron">
      <field name="name">VM Rental: Auto-provision Pending VMs</field>
      <field name="model_id" ref="model_vm_rental_machine"/>
      <field name="state">code</field>
      <field name="code">model.auto_provision_pending_vms()</field>
      <field name="interval_number">30</field>
      <field name="interval_type">minutes</field>
      <field name="numbercall">-1</field>
      <field name="active" eval="False"/>  <!-- По умолчанию отключено -->
    </record>

    <!-- Очистка старых terminated VM -->
    <record id="cron_cleanup_terminated_vms" model="ir.cron">
      <field name="name">VM Rental: Cleanup Old Terminated VMs</field>
      <field name="model_id" ref="model_vm_rental_machine"/>
      <field name="state">code</field>
      <field name="code">model.cleanup_terminated_vms(days_old=30)</field>
      <field name="interval_number">1</field>
      <field name="interval_type">weeks</field>
      <field name="numbercall">-1</field>
      <field name="active" eval="True"/>
    </record>

    <!-- Проверка состояния VM -->
    <record id="cron_vm_health_check" model="ir.cron">
      <field name="name">VM Rental: Health Check for Active VMs</field>
      <field name="model_id" ref="model_vm_rental_machine"/>
      <field name="state">code</field>
      <field name="code">model.run_health_checks()</field>
      <field name="interval_number">6</field>
      <field name="interval_type">hours</field>
      <field name="numbercall">-1</field>
      <field name="active" eval="False"/>  <!-- По умолчанию отключено -->
    </record>

    <!-- Автоматическая нормализация ресурсов для новых VM -->
    <record id="cron_normalize_pending_vm_resources" model="ir.cron">
      <field name="name">VM Rental: Normalize Pending VM Resources</field>
      <field name="model_id" ref="model_vm_rental_machine"/>
      <field name="state">code</field>
      <field name="code">
pending_vms = model.search([('state', '=', 'pending')])
for vm in pending_vms:
    try:
        vm.normalize_vm_resources()
    except Exception:
        pass
      </field>
      <field name="interval_number">1</field>
      <field name="interval_type">days</field>
      <field name="numbercall">-1</field>
      <field name="active" eval="False"/>  <!-- По умолчанию отключено -->
    </record>

  </data>
</odoo>