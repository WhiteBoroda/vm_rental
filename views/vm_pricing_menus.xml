<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <menuitem
        id="menu_vm_pricing_submenu"
        name="Pricing &amp; Billing"
        parent="menu_vm_rental_root"
        sequence="70"/>
    <menuitem
        id="menu_hypervisor_server_pricing"
        name="Server Pricing Plans"
        parent="menu_vm_pricing_submenu"
        action="action_hypervisor_server_pricing"
        sequence="10"/>
    <menuitem
        id="menu_vm_pricing_calculator"
        name="Pricing Calculator"
        parent="menu_vm_pricing_submenu"
        action="action_vm_pricing_calculator"
        sequence="20"/>
    <menuitem
        id="menu_pricing_dashboard"
        name="Pricing Dashboard"
        parent="menu_vm_pricing_submenu"
        action="action_pricing_dashboard"
        sequence="30"/>

    <record id="action_update_all_product_prices" model="ir.actions.server">
        <field name="name">Update All Product Prices</field>
        <field name="model_id" ref="product.model_product_template"/>
        <field name="state">code</field>
        <field name="code">
updated_count = 0
products = model.search([
    ('hypervisor_server_id', '!=', False),
    ('auto_price_calculation', '=', True)
])

for product in products:
    if product.calculated_price > 0:
        product.write({'list_price': product.calculated_price})
        updated_count += 1

action = {
    'type': 'ir.actions.client',
    'tag': 'display_notification',
    'params': {
        'title': 'Price Update Complete',
        'message': 'Updated prices for %s VM products' % updated_count,
        'type': 'success',
        'sticky': False,
    }
}
        </field>
    </record>
    <record id="action_create_default_pricing_plans" model="ir.actions.server">
        <field name="name">Create Default Pricing Plans</field>
        <field name="model_id" ref="model_hypervisor_server"/>
        <field name="state">code</field>
        <field name="code">
created_count = 0
servers = model.search([])

for server in servers:
    # Проверяем, есть ли уже план ценообразования
    existing_pricing = env['hypervisor.server.pricing'].search([
        ('server_id', '=', server.id),
        ('active', '=', True)
    ], limit=1)

    if not existing_pricing:
        # Создаем базовый план ценообразования
        pricing_plan = env['hypervisor.server.pricing'].create({
            'name': 'Default Pricing - %s' % server.name,
            'server_id': server.id,
            'price_per_core': 5.0,
            'price_per_gb_ram': 2.0,
            'price_per_gb_disk': 0.1,
            'os_multiplier': 1.5,  # 50% доплата за Windows
            'bulk_discount_threshold': 10,
            'bulk_discount_percent': 10.0,
            'priority': 10,
            'active': True,
        })
        created_count += 1

action = {
    'type': 'ir.actions.client',
    'tag': 'display_notification',
    'params': {
        'title': 'Default Pricing Plans Created',
        'message': 'Created %s default pricing plans' % created_count,
        'type': 'success',
        'sticky': False,
    }
}
        </field>
    </record>
    <record id="action_pricing_analysis_report" model="ir.actions.server">
        <field name="name">Pricing Analysis Report</field>
        <field name="model_id" ref="model_hypervisor_server_pricing"/>
        <field name="state">code</field>
        <field name="code">
# Анализ ценообразования
active_pricing = model.search([('active', '=', True)])
servers_with_pricing = len(set(active_pricing.mapped('server_id.id')))
total_servers = env['hypervisor.server'].search_count([])

if active_pricing:
    avg_core_price = sum(active_pricing.mapped('price_per_core')) / len(active_pricing)
    avg_ram_price = sum(active_pricing.mapped('price_per_gb_ram')) / len(active_pricing)
    avg_disk_price = sum(active_pricing.mapped('price_per_gb_disk')) / len(active_pricing)

    min_core_price = min(active_pricing.mapped('price_per_core'))
    max_core_price = max(active_pricing.mapped('price_per_core'))
else:
    avg_core_price = avg_ram_price = avg_disk_price = 0
    min_core_price = max_core_price = 0

# Анализ продуктов с автоценообразованием
auto_price_products = env['product.template'].search_count([
    ('auto_price_calculation', '=', True),
    ('hypervisor_server_id', '!=', False)
])

total_vm_products = env['product.template'].search_count([
    ('hypervisor_server_id', '!=', False)
])

coverage_percentage = (servers_with_pricing / total_servers * 100) if total_servers > 0 else 0
auto_pricing_adoption = (auto_price_products / total_vm_products * 100) if total_vm_products > 0 else 0

report = """Pricing Analysis Report:

Server Coverage:
• Servers with pricing: %d/%d
• Coverage percentage: %.1f%%

Price Ranges:
• CPU Core: $%.2f - $%.2f (avg: $%.2f)
• RAM per GB: $%.2f average
• Disk per GB: $%.4f average

Product Integration:
• Auto-pricing products: %d/%d
• Auto-pricing adoption: %.1f%%

Active Pricing Plans: %d
""" % (
    servers_with_pricing, total_servers, coverage_percentage,
    min_core_price, max_core_price, avg_core_price,
    avg_ram_price, avg_disk_price,
    auto_price_products, total_vm_products, auto_pricing_adoption,
    len(active_pricing)
)

action = {
    'type': 'ir.actions.client',
    'tag': 'display_notification',
    'params': {
        'title': 'Pricing Analysis Report',
        'message': report,
        'type': 'info',
        'sticky': True,
    }
}
        </field>
    </record>

    <menuitem
        id="menu_update_product_prices"
        name="Update Product Prices"
        parent="menu_vm_tools_submenu"
        action="action_update_all_product_prices"
        sequence="70"/>

    <menuitem
        id="menu_create_default_pricing"
        name="Create Default Pricing Plans"
        parent="menu_vm_tools_submenu"
        action="action_create_default_pricing_plans"
        sequence="80"/>

    <menuitem
        id="menu_pricing_analysis"
        name="Pricing Analysis Report"
        parent="menu_vm_tools_submenu"
        action="action_pricing_analysis_report"
        sequence="90"/>

    <record id="view_mass_price_update_wizard" model="ir.ui.view">
        <field name="name">mass.price.update.wizard</field>
        <field name="model">vm.pricing.calculator</field>
        <field name="arch" type="xml">
            <form string="Mass Price Update">
                <group>
                    <div class="alert alert-warning" role="alert">
                        <i class="fa fa-warning mr-2" title="Warning"></i>
                        <strong>Warning:</strong> This will update prices for all VM products with auto-calculation enabled.
                    </div>

                    <group string="Update Options">
                        <field name="server_id" string="Limit to Server" help="Leave empty to update all servers"/>
                        <label for="billing_period"/>
                        <div>
                            <field name="billing_period" nolabel="1"/>
                            <div class="text-muted">
                                <small>Pricing period for calculations</small>
                            </div>
                        </div>
                    </group>
                </group>

                <footer>
                    <button name="%(action_update_all_product_prices)d" type="action"
                            string="Update All Prices" class="btn-primary"/>
                    <button string="Cancel" class="btn-secondary" special="cancel"/>
                </footer>
            </form>
        </field>
    </record>

    <record id="action_mass_price_update_wizard" model="ir.actions.act_window">
        <field name="name">Mass Price Update</field>
        <field name="res_model">vm.pricing.calculator</field>
        <field name="view_mode">form</field>
        <field name="view_id" ref="view_mass_price_update_wizard"/>
        <field name="target">new</field>
    </record>

    <menuitem
        id="menu_mass_price_update"
        name="Mass Price Update"
        parent="menu_vm_pricing_submenu"
        action="action_mass_price_update_wizard"
        sequence="40"/>

</odoo>